{
  "version": 3,
  "sources": ["../../vue3-dialog/dialog.js", "../../vue3-dialog/styles.js", "../../vue3-dialog/index.ts"],
  "sourcesContent": ["const dialog = options => {\r\n\r\n    const dialogWrapper = document.createElement('div');\r\n    const dialogBox = document.createElement('div');\r\n    const message = document.createElement('div');\r\n    const buttons = document.createElement('div');\r\n\r\n    message.appendChild(document.createTextNode(options.message));\r\n\r\n    Object.keys(options.buttons).forEach(key => {\r\n        const button = document.createElement('button');\r\n        button.onclick = () => {\r\n            if (key in options.callbacks) options.callbacks[key]();\r\n            dialogWrapper.parentNode.removeChild(dialogWrapper);\r\n        };\r\n        button.appendChild(document.createTextNode(options.buttons[key]?.text || key.charAt(0).toUpperCase() + key.toLowerCase().slice(1)));\r\n        button.classList.add(...(options.buttons[key]?.class?.split(' ') || ['__dialog-button', '__dialog-button-' + key.toLowerCase()]));\r\n        buttons.appendChild(button);\r\n    });\r\n\r\n    dialogWrapper.classList.add(...options.wrapperClass.split(' '));\r\n    dialogBox.classList.add(...options.boxClass.split(' '));\r\n    message.classList.add(...options.messageClass.split(' '));\r\n    buttons.classList.add(...options.buttonsClass.split(' '));\r\n\r\n    dialogWrapper.appendChild(dialogBox);\r\n    dialogBox.appendChild(message);\r\n    dialogBox.appendChild(buttons);\r\n\r\n    document.body.appendChild(dialogWrapper);\r\n\r\n    document.activeElement.blur();\r\n\r\n};\r\n\r\nexport default dialog;", "const applyStyles = options => {\r\n\r\n    const style = document.createElement('style');\r\n\r\n    style.appendChild(document.createTextNode(`\r\n    ${options.wrapper ? `.__dialog-wrapper {\r\n        position: fixed;\r\n        z-index: 10;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n        background-color: rgb(0,0,0);\r\n        background-color: rgba(0,0,0,${options.darken});\r\n    }` : ''}\r\n    \r\n    ${options.default ? `.__dialog-box {\r\n        font-family: Inter, Avenir, Helvetica, Arial, sans-serif;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n        font-weight: 400;\r\n        color: rgba(255, 255, 255, 0.87);\r\n        background-color: rgb(51, 50, 50);\r\n        width: fit-content;\r\n        height: fit-content;\r\n        margin: 20% auto;\r\n        padding: 20px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n    }\r\n    \r\n    .__dialog-message {\r\n        margin-bottom: 20px;\r\n    }\r\n    \r\n    .__dialog-buttons {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        gap: 50px;\r\n    }\r\n    \r\n    .__dialog-button  {\r\n        color: rgba(255, 255, 255, 0.87);\r\n        border-radius: 8px;\r\n        border: 1px solid transparent;\r\n        padding: 0.6em 1.2em;\r\n        font-size: 1em;\r\n        font-weight: 500;\r\n        font-family: inherit;\r\n        background-color: #1a1a1a;\r\n        cursor: pointer;\r\n        transition: border-color 0.25s;\r\n    }\r\n    \r\n    .__dialog-button-confirm {\r\n        background-color: #535bf2;\r\n    }\r\n\r\n    .__dialog-button-delete {\r\n        --colour: #f22e1f;\r\n        background-color: var(--colour);\r\n        border-color: var(--colour);\r\n    }\r\n\r\n    .__dialog-button:hover {\r\n        border-color: #646cff;\r\n    }\r\n\r\n    .__dialog-button-delete:hover, .__dialog-button-confirm:hover {\r\n        border-color: white;\r\n    }\r\n\r\n    .__dialog-button:focus,\r\n    .__dialog-button:focus-visible {\r\n        outline: 4px auto -webkit-focus-ring-color;\r\n    }` : ''}\r\n    `));\r\n\r\n    document.head.append(style);\r\n\r\n};\r\n\r\nexport default applyStyles;", "import dialog from './dialog';\r\nimport applyStyles from './styles';\r\n\r\nconst plugin = {\r\n    install(app, options) {\r\n\r\n        app.config.globalProperties.$dialogOptions = {\r\n            message: 'Hello World!',\r\n            buttons: ['cancel', 'confirm'],\r\n            presets: {},\r\n            callbacks: {},\r\n            wrapperClass: '__dialog-wrapper',\r\n            boxClass: '__dialog-box',\r\n            messageClass: '__dialog-message',\r\n            buttonsClass: '__dialog-buttons',\r\n            css: {\r\n                default: true,\r\n                wrapper: true,\r\n                darken: 0.6\r\n            }\r\n        };\r\n\r\n        const mergeOptions = localOptions => {\r\n\r\n            const globalOptions = app.config.globalProperties.$dialogOptions;\r\n\r\n            if (localOptions) {\r\n\r\n                if ('preset' in localOptions) {\r\n                    const p = globalOptions.presets[localOptions.preset];\r\n                    if (p) {\r\n                        for (const key in p) localOptions[key] = localOptions[key] || p[key];\r\n                    }\r\n                }\r\n\r\n                const merged = { ...globalOptions, ...localOptions, css: {...globalOptions.css, ...(localOptions?.css || {}) } };\r\n\r\n                if (Array.isArray(merged.buttons)) {\r\n                    const buttons = {};\r\n                    merged.buttons.forEach(b => buttons[b] = {});\r\n                    merged.buttons = buttons;\r\n                }\r\n\r\n                Object.keys(localOptions).forEach(key => {\r\n                    const value = localOptions[key];\r\n                    if (!['message', 'buttons', 'presets', 'callbacks', 'css', 'wrapperClass', 'boxClass', 'messageClass', 'buttonsClass', 'preset'].includes(key) && (value instanceof Function) && (value.length === 0)) merged.callbacks[key] = value;\r\n                })\r\n\r\n                return merged;\r\n\r\n            }\r\n\r\n            else return globalOptions;\r\n        };\r\n\r\n        app.config.globalProperties.$dialogOptions = mergeOptions(options);\r\n\r\n        applyStyles(app.config.globalProperties.$dialogOptions.css);\r\n\r\n        const createDialog = localOptions => dialog(mergeOptions(localOptions));\r\n\r\n        app.directive('dialog', {\r\n            mounted: (el, { value, arg }) =>  {\r\n                if (arg) {\r\n                    if (value) value.preset = arg;\r\n                    else value = { preset: arg };\r\n                }\r\n                el.onclick = () => createDialog(value || {});\r\n            },\r\n            unmounted: el => el.onclick = null\r\n        });\r\n\r\n        app.config.globalProperties.$dialog = localOptions => createDialog(localOptions);\r\n\r\n        app.provide('$dialog', localOptions => createDialog(localOptions));\r\n\r\n        app.provide('$dialogOptions', app.config.globalProperties.$dialogOptions);\r\n\r\n    }\r\n};\r\n\r\nexport default plugin;"],
  "mappings": "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",
  "names": []
}
