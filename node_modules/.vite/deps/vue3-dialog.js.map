{
  "version": 3,
  "sources": ["../../vue3-dialog/dialog.js", "../../vue3-dialog/styles.js", "../../vue3-dialog/index.ts"],
  "sourcesContent": ["const dialog = options => {\n\n    const dialogWrapper = document.createElement('div');\n    const dialogBox = document.createElement('div');\n    const message = document.createElement('div');\n    const buttons = document.createElement('div');\n\n    message.appendChild(document.createTextNode(options.message));\n\n    Object.keys(options.buttons).forEach(key => {\n        const button = document.createElement('button');\n        button.onclick = () => {\n            if (key in options.callbacks) options.callbacks[key]();\n            dialogWrapper.parentNode.removeChild(dialogWrapper);\n        };\n        button.appendChild(document.createTextNode(options.buttons[key]?.text || key.charAt(0).toUpperCase() + key.toLowerCase().slice(1)));\n        button.classList.add(...(options.buttons[key]?.class?.split(' ') || ['__dialog-button', '__dialog-button-' + key.toLowerCase()]));\n        buttons.appendChild(button);\n    });\n\n    dialogWrapper.classList.add(...options.wrapperClass.split(' '));\n    dialogBox.classList.add(...options.boxClass.split(' '));\n    message.classList.add(...options.messageClass.split(' '));\n    buttons.classList.add(...options.buttonsClass.split(' '));\n\n    dialogWrapper.appendChild(dialogBox);\n    dialogBox.appendChild(message);\n    dialogBox.appendChild(buttons);\n\n    document.body.appendChild(dialogWrapper);\n\n    document.activeElement.blur();\n\n};\n\nexport default dialog;", "const applyStyles = options => {\n\n    const style = document.createElement('style');\n\n    style.appendChild(document.createTextNode(`\n    ${options.wrapper ? `.__dialog-wrapper {\n        position: fixed;\n        z-index: 10;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n        background-color: rgb(0,0,0);\n        background-color: rgba(0,0,0,${options.darken});\n    }` : ''}\n    \n    ${options.default ? `.__dialog-box {\n        font-family: Inter, Avenir, Helvetica, Arial, sans-serif;\n        font-size: 16px;\n        line-height: 24px;\n        font-weight: 400;\n        color: rgba(255, 255, 255, 0.87);\n        background-color: rgb(51, 50, 50);\n        width: fit-content;\n        height: fit-content;\n        margin: 20% auto;\n        padding: 20px;\n        text-align: center;\n        border-radius: 10px;\n    }\n    \n    .__dialog-message {\n        margin-bottom: 20px;\n    }\n    \n    .__dialog-buttons {\n        display: flex;\n        justify-content: space-between;\n        gap: 50px;\n    }\n    \n    .__dialog-button  {\n        color: rgba(255, 255, 255, 0.87);\n        border-radius: 8px;\n        border: 1px solid transparent;\n        padding: 0.6em 1.2em;\n        font-size: 1em;\n        font-weight: 500;\n        font-family: inherit;\n        background-color: #1a1a1a;\n        cursor: pointer;\n        transition: border-color 0.25s;\n    }\n    \n    .__dialog-button-confirm {\n        background-color: #535bf2;\n    }\n\n    .__dialog-button-delete {\n        --colour: #f22e1f;\n        background-color: var(--colour);\n        border-color: var(--colour);\n    }\n\n    .__dialog-button:hover {\n        border-color: #646cff;\n    }\n\n    .__dialog-button-delete:hover, .__dialog-button-confirm:hover {\n        border-color: white;\n    }\n\n    .__dialog-button:focus,\n    .__dialog-button:focus-visible {\n        outline: 4px auto -webkit-focus-ring-color;\n    }` : ''}\n    `));\n\n    document.head.append(style);\n\n};\n\nexport default applyStyles;", "import dialog from './dialog';\nimport applyStyles from './styles';\n\nconst plugin = {\n    install(app, options) {\n\n        app.config.globalProperties.$dialogOptions = {\n            message: 'Hello World!',\n            buttons: ['cancel', 'confirm'],\n            presets: {},\n            callbacks: {},\n            wrapperClass: '__dialog-wrapper',\n            boxClass: '__dialog-box',\n            messageClass: '__dialog-message',\n            buttonsClass: '__dialog-buttons',\n            css: {\n                default: true,\n                wrapper: true,\n                darken: 0.6\n            }\n        };\n\n        const mergeOptions = localOptions => {\n\n            const globalOptions = app.config.globalProperties.$dialogOptions;\n\n            if (localOptions) {\n\n                if ('preset' in localOptions) {\n                    const p = globalOptions.presets[localOptions.preset];\n                    if (p) {\n                        for (const key in p) localOptions[key] = localOptions[key] || p[key];\n                    }\n                }\n\n                const merged = { ...globalOptions, ...localOptions, css: {...globalOptions.css, ...(localOptions?.css || {}) } };\n\n                if (Array.isArray(merged.buttons)) {\n                    const buttons = {};\n                    merged.buttons.forEach(b => buttons[b] = {});\n                    merged.buttons = buttons;\n                }\n\n                Object.keys(localOptions).forEach(key => {\n                    const value = localOptions[key];\n                    if (!['message', 'buttons', 'presets', 'callbacks', 'css', 'wrapperClass', 'boxClass', 'messageClass', 'buttonsClass', 'preset'].includes(key) && (value instanceof Function) && (value.length === 0)) merged.callbacks[key] = value;\n                })\n\n                return merged;\n\n            }\n\n            else return globalOptions;\n        };\n\n        app.config.globalProperties.$dialogOptions = mergeOptions(options);\n\n        applyStyles(app.config.globalProperties.$dialogOptions.css);\n\n        const createDialog = localOptions => dialog(mergeOptions(localOptions));\n\n        app.directive('dialog', {\n            mounted: (el, { value, arg }) =>  {\n                if (arg) {\n                    if (value) value.preset = arg;\n                    else value = { preset: arg };\n                }\n                el.onclick = () => createDialog(value || {});\n            },\n            unmounted: el => el.onclick = null\n        });\n\n        app.config.globalProperties.$dialog = localOptions => createDialog(localOptions);\n\n        app.provide('$dialog', localOptions => createDialog(localOptions));\n\n        app.provide('$dialogOptions', app.config.globalProperties.$dialogOptions);\n\n    }\n};\n\nexport default plugin;"],
  "mappings": "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",
  "names": []
}
